const fs = require('fs');
const path = require('path');
const archiver = require('archiver');
const cron = require('node-cron');

// –ú–∞—Å—Å–∏–≤ –∫–∞—Ç–∞–ª–æ–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å
const directoriesToArchive = [
  'D:\\bsuir\\web_technologies\\__data_page',
  'D:\\bsuir\\web_technologies\\__data_page\\images'
];

// –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞—Ä—Ö–∏–≤–æ–≤
const archiveDir = path.join('D:\\bsuir\\web_technologies\\__data_page', 'archives');
if (!fs.existsSync(archiveDir)) {
  fs.mkdirSync(archiveDir); // –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –∞—Ä—Ö–∏–≤–∞
const sanitizeDate = () => {
  return new Date()
    .toISOString()
    .replace(/[:.]/g, '-') // –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    .replace('T', '_')     // –î–µ–ª–∞–µ–º –∏–º—è –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–º
    .replace('Z', '');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞
const createArchive = (dirPath) => {
  const archiveName = `${path.basename(dirPath)}_${sanitizeDate()}.zip`;
  const outputPath = path.join(archiveDir, archiveName);
  const output = fs.createWriteStream(outputPath);
  const archive = archiver('zip', {
    zlib: { level: 9 } // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Å–∂–∞—Ç–∏–µ
  });

  output.on('close', () => {
    console.log(`‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: ${archiveName}`);
  });

  archive.on('error', (err) => {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è ${dirPath}:`, err);
  });

  archive.pipe(output);
  archive.directory(dirPath, false);
  archive.finalize();
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫–∞—Ç–∞–ª–æ–≥–æ–≤
const archiveDirectories = () => {
  directoriesToArchive.forEach((dir) => {
    if (fs.existsSync(dir)) {
      createArchive(dir);
    } else {
      console.log(`‚ö†Ô∏è –ö–∞—Ç–∞–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${dir}`);
    }
  });
};

// –ó–∞–ø—É—Å–∫ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞
cron.schedule('*/1 * * * *', () => {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è...');
  archiveDirectories();

  // –ó–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã —É—Å–ø–µ—Ç—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è
  setTimeout(() => {
    console.log('‚úÖ –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –í—ã—Ö–æ–¥.');
    process.exit();
  }, 3000); // 3 —Å–µ–∫—É–Ω–¥—ã
});

console.log('üïê –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω. –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É.');
